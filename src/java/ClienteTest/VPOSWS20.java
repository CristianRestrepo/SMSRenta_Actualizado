
package ClienteTest;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "VPOSWS20", targetNamespace = "http://www.alignet.com/VPOSWS20/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface VPOSWS20 {


    /**
     * 
     * @param errorCodeAR
     * @param errorMessage
     * @param result
     * @param errorMessageAR
     * @param commerceId
     * @param good
     * @param authorizationCode
     * @param authorizedAmountAR
     * @param fingerprint
     * @param orderWeb
     * @param fraudScoreAR
     * @param fraudScore
     * @param ipAddress
     * @param billingData
     * @param reservedFields
     * @param fraudFactors
     * @param shippingData
     * @param resultAR
     * @param authorizationCodeAR
     * @param acquirerId
     * @param additionalObservations
     * @param flight
     * @param purchaseData
     * @param cardData
     * @param authorizedAmount
     * @param transactionTrace
     * @param errorCode
     * @param administrativeRate
     * @param additionalMessage
     * @param language
     * @param taxes
     */
    @WebMethod(action = "http://www.alignet.com/VPOSWS20/authorize")
    @RequestWrapper(localName = "authorize", targetNamespace = "http://www.alignet.com/VPOSWS20/", className = "ClienteTest.Authorize")
    @ResponseWrapper(localName = "authorizeResponse", targetNamespace = "http://www.alignet.com/VPOSWS20/", className = "ClienteTest.AuthorizeResponse")
    public void authorize(
        @WebParam(name = "commerceId", targetNamespace = "")
        Integer commerceId,
        @WebParam(name = "acquirerId", targetNamespace = "")
        Integer acquirerId,
        @WebParam(name = "language", targetNamespace = "")
        String language,
        @WebParam(name = "ipAddress", targetNamespace = "")
        String ipAddress,
        @WebParam(name = "transactionTrace", targetNamespace = "")
        String transactionTrace,
        @WebParam(name = "fingerprint", targetNamespace = "")
        String fingerprint,
        @WebParam(name = "additionalObservations", targetNamespace = "")
        String additionalObservations,
        @WebParam(name = "purchaseData", targetNamespace = "")
        PurchaseData purchaseData,
        @WebParam(name = "cardData", targetNamespace = "")
        CardData cardData,
        @WebParam(name = "billingData", targetNamespace = "")
        Person billingData,
        @WebParam(name = "shippingData", targetNamespace = "")
        ShippingData shippingData,
        @WebParam(name = "orderWeb", targetNamespace = "")
        OrderWeb orderWeb,
        @WebParam(name = "flight", targetNamespace = "")
        Flight flight,
        @WebParam(name = "good", targetNamespace = "")
        Good good,
        @WebParam(name = "administrativeRate", targetNamespace = "")
        AdministrativeRate administrativeRate,
        @WebParam(name = "taxes", targetNamespace = "")
        List<Tax> taxes,
        @WebParam(name = "reservedFields", targetNamespace = "")
        List<ReservedField> reservedFields,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Integer> result,
        @WebParam(name = "errorCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMessage", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> errorMessage,
        @WebParam(name = "additionalMessage", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> additionalMessage,
        @WebParam(name = "authorizationCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> authorizationCode,
        @WebParam(name = "authorizedAmount", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> authorizedAmount,
        @WebParam(name = "fraudScore", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Integer> fraudScore,
        @WebParam(name = "fraudFactors", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> fraudFactors,
        @WebParam(name = "resultAR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Integer> resultAR,
        @WebParam(name = "errorCodeAR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> errorCodeAR,
        @WebParam(name = "errorMessageAR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> errorMessageAR,
        @WebParam(name = "authorizationCodeAR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> authorizationCodeAR,
        @WebParam(name = "authorizedAmountAR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> authorizedAmountAR,
        @WebParam(name = "fraudScoreAR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Integer> fraudScoreAR);

    /**
     * 
     * @param errorMessage
     * @param result
     * @param commerceId
     * @param errorCode
     * @param purchaseCode
     * @param acquirerId
     */
    @WebMethod(action = "http://www.alignet.com/VPOSWS20/reverse")
    @RequestWrapper(localName = "reverse", targetNamespace = "http://www.alignet.com/VPOSWS20/", className = "ClienteTest.Reverse")
    @ResponseWrapper(localName = "reverseResponse", targetNamespace = "http://www.alignet.com/VPOSWS20/", className = "ClienteTest.ReverseResponse")
    public void reverse(
        @WebParam(name = "acquirerId", targetNamespace = "")
        int acquirerId,
        @WebParam(name = "commerceId", targetNamespace = "")
        int commerceId,
        @WebParam(name = "purchaseCode", targetNamespace = "")
        String purchaseCode,
        @WebParam(name = "result", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Integer> result,
        @WebParam(name = "errorCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> errorCode,
        @WebParam(name = "errorMessage", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> errorMessage);

}
